# Set the URL of the script to download
$scriptUrl = "https://raw.githubusercontent.com/OmarSalhab/windowsActiveRaw/refs/heads/main/active" 
# Replace with your raw URL from Repo 1

# Set the base path for the temporary directory.  Using a well-known temporary location is recommended for security and cleanup.
$basePath = $env:TEMP # or $env:USERPROFILE + "\AppData\Local\Temp"

# Generate a unique temporary directory name (to avoid conflicts)
$tempDirName = ([guid]::NewGuid()).ToString()

# Construct the full path for the temporary directory
$tempDirPath = Join-Path $basePath $tempDirName

# Attempt to create the temporary directory; handle potential errors
try {
    New-Item -ItemType Directory -Force -Path $tempDirPath | Out-Null # Suppress output from New-Item

    # Construct the full path for the downloaded script
    $scriptPath = Join-Path $tempDirPath "Change_Windows_Edition.cmd"

    # Download the script
    Invoke-WebRequest -Uri $scriptUrl -OutFile $scriptPath

    # Check if the download was successful
    if (Test-Path $scriptPath) {
        Write-Host "Script downloaded successfully to: $scriptPath"
        # Run the downloaded script.  Note the use of fully qualified path to avoid issues.
        Start-Process -FilePath $scriptPath -Wait 

        #Optional: Remove the temporary directory and its contents after execution
        Remove-Item -Path $tempDirPath -Recurse -Force

    } else {
        Write-Error "Failed to download the script."
        # Remove the directory if creation succeeded but download failed.
        Remove-Item -Path $tempDirPath -Recurse -Force
    }
}
catch {
    Write-Error "An error occurred: $($_.Exception.Message)"
    # Remove the directory if creation failed
    if (Test-Path $tempDirPath) { Remove-Item -Path $tempDirPath -Recurse -Force }
}

